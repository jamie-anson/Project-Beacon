name: Deploy Runner to Staging

on:
  push:
    branches: [ main ]
    paths:
      - 'runner-app/**'
      - '.github/workflows/deploy-staging.yml'
  workflow_dispatch: {}

permissions:
  contents: read
  packages: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure Docker Compose file exists
        run: |
          test -f runner-app/docker-compose.staging.yml || { echo "runner-app/docker-compose.staging.yml not found"; exit 1; }

      - name: Preflight DNS and SSH port
        run: |
          set -euo pipefail
          echo "Checking DNS resolution for STAGING_HOST..."
          getent hosts "${{ secrets.STAGING_HOST }}" || { echo "DNS not resolvable for STAGING_HOST: ${{ secrets.STAGING_HOST }}"; exit 1; }
          echo "Checking TCP connectivity to port 22 on STAGING_HOST..."
          timeout 5 bash -lc "</dev/tcp/${{ secrets.STAGING_HOST }}/22" || { echo "Port 22 not reachable on STAGING_HOST: ${{ secrets.STAGING_HOST }}"; exit 1; }

      - name: Copy compose to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          source: "runner-app/docker-compose.staging.yml"
          target: "~/apps/runner-app/docker-compose.yml"
          strip_components: 1

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        env:
          GHCR_USER: ${{ secrets.GHCR_USER }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail
            mkdir -p ~/apps/runner-app
            cd ~/apps/runner-app
            echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USER" --password-stdin
            docker compose -f docker-compose.yml pull
            docker compose -f docker-compose.yml up -d --remove-orphans
            docker image prune -f

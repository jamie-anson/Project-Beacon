name: Pull Request Tests

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  pr-validation:
    name: PR Validation Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout PR code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y curl jq
        
    - name: Run smoke tests
      id: smoke
      run: |
        echo "🔍 Running smoke tests on PR changes..."
        chmod +x tests/integration/quick-smoke-test.sh
        ./tests/integration/quick-smoke-test.sh
        
    - name: Run health checks
      id: health
      run: |
        echo "🔍 Running health monitoring tests..."
        chmod +x tests/monitoring/health-check-tests.sh
        ./tests/monitoring/health-check-tests.sh
        
    - name: Validate test scripts
      run: |
        echo "🔍 Validating test script syntax..."
        
        # Check all shell scripts for syntax errors
        find tests/ -name "*.sh" -type f | while read -r script; do
          if ! bash -n "$script"; then
            echo "❌ Syntax error in $script"
            exit 1
          else
            echo "✅ $script syntax OK"
          fi
        done
        
    - name: Comment PR results
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const smokeResult = '${{ steps.smoke.outcome }}';
          const healthResult = '${{ steps.health.outcome }}';
          
          let status = '✅ All tests passed';
          let details = '';
          
          if (smokeResult !== 'success' || healthResult !== 'success') {
            status = '❌ Some tests failed';
            details = `
            **Test Results:**
            - Smoke Tests: ${smokeResult === 'success' ? '✅ Passed' : '❌ Failed'}
            - Health Checks: ${healthResult === 'success' ? '✅ Passed' : '❌ Failed'}
            `;
          }
          
          const comment = `## 🧪 PR Test Results
          
          ${status}
          
          ${details}
          
          **View Details:** [Workflow Run](${context.payload.repository.html_url}/actions/runs/${context.runId})
          
          ---
          *Automated testing by GitHub Actions*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

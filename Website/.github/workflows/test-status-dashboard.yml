name: Test Status Dashboard

on:
  workflow_run:
    workflows: ["Production Hardening Tests", "Deployment Validation Tests", "Scheduled Production Monitoring"]
    types:
      - completed
  workflow_dispatch:

jobs:
  update-dashboard:
    name: Update Test Status Dashboard
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Generate test status dashboard
      run: |
        echo "# 🚀 Project Beacon Test Status Dashboard" > TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        echo "**Last Updated:** $(date -u)" >> TEST_STATUS.md
        echo "**Auto-generated by:** GitHub Actions" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        
        echo "## 🔄 Continuous Testing Status" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        echo "| Test Suite | Status | Last Run | Duration |" >> TEST_STATUS.md
        echo "|------------|--------|----------|----------|" >> TEST_STATUS.md
        
        # Get latest workflow runs via GitHub API
        echo "| Production Hardening | [![Production Tests](https://github.com/${{ github.repository }}/actions/workflows/production-tests.yml/badge.svg)](https://github.com/${{ github.repository }}/actions/workflows/production-tests.yml) | [View Runs](https://github.com/${{ github.repository }}/actions/workflows/production-tests.yml) | ~15 min |" >> TEST_STATUS.md
        echo "| Deployment Validation | [![Deployment Tests](https://github.com/${{ github.repository }}/actions/workflows/deployment-tests.yml/badge.svg)](https://github.com/${{ github.repository }}/actions/workflows/deployment-tests.yml) | [View Runs](https://github.com/${{ github.repository }}/actions/workflows/deployment-tests.yml) | ~10 min |" >> TEST_STATUS.md
        echo "| Scheduled Monitoring | [![Monitoring](https://github.com/${{ github.repository }}/actions/workflows/scheduled-monitoring.yml/badge.svg)](https://github.com/${{ github.repository }}/actions/workflows/scheduled-monitoring.yml) | [View Runs](https://github.com/${{ github.repository }}/actions/workflows/scheduled-monitoring.yml) | ~15 min |" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        
        echo "## 📊 Test Coverage" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        echo "### Phase 1: Quick Smoke Tests (< 30s)" >> TEST_STATUS.md
        echo "- ✅ Service availability checks" >> TEST_STATUS.md
        echo "- ✅ Basic API connectivity" >> TEST_STATUS.md
        echo "- ✅ Critical endpoint validation" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        
        echo "### Phase 2: Health Monitoring (< 60s)" >> TEST_STATUS.md
        echo "- ✅ Service health endpoints" >> TEST_STATUS.md
        echo "- ✅ Database connectivity" >> TEST_STATUS.md
        echo "- ✅ Redis queue health" >> TEST_STATUS.md
        echo "- ✅ Performance metrics" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        
        echo "### Phase 3: Cross-Service Integration (< 5 min)" >> TEST_STATUS.md
        echo "- ✅ Job submission pipeline" >> TEST_STATUS.md
        echo "- ✅ Portal ↔ Runner communication" >> TEST_STATUS.md
        echo "- ✅ Portal ↔ Hybrid communication" >> TEST_STATUS.md
        echo "- ✅ End-to-end job processing" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        
        echo "### Phase 4: Regression Prevention (< 2 min)" >> TEST_STATUS.md
        echo "- ✅ Known issue prevention" >> TEST_STATUS.md
        echo "- ✅ Data structure validation" >> TEST_STATUS.md
        echo "- ✅ Signature verification" >> TEST_STATUS.md
        echo "- ✅ Queue processing reliability" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        
        echo "## 🔧 Test Automation Features" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        echo "### Triggers" >> TEST_STATUS.md
        echo "- **Push/PR:** Runs smoke + health + integration tests" >> TEST_STATUS.md
        echo "- **Scheduled:** Every 4 hours (business) / 6 hours (weekend)" >> TEST_STATUS.md
        echo "- **Post-Deployment:** Automatic validation after deployments" >> TEST_STATUS.md
        echo "- **Manual:** On-demand execution with phase selection" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        
        echo "### Alerting" >> TEST_STATUS.md
        echo "- **Service Down:** Immediate GitHub issue creation" >> TEST_STATUS.md
        echo "- **Pipeline Issues:** Warning issue for stuck jobs" >> TEST_STATUS.md
        echo "- **Deployment Failures:** Rollback recommendations" >> TEST_STATUS.md
        echo "- **Weekly Reports:** Comprehensive health summaries" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        
        echo "## 📈 Monitoring Schedule" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        echo "| Time | Frequency | Tests |" >> TEST_STATUS.md
        echo "|------|-----------|-------|" >> TEST_STATUS.md
        echo "| Business Hours | Every 4 hours | Health + Availability |" >> TEST_STATUS.md
        echo "| Weekends | Every 6 hours | Health + Availability |" >> TEST_STATUS.md
        echo "| Daily 6 AM UTC | Once | Full comprehensive suite |" >> TEST_STATUS.md
        echo "| Post-Deployment | Triggered | Validation + smoke tests |" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        
        echo "## 🚨 Current Issues" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        echo "Check [Issues](https://github.com/${{ github.repository }}/issues?q=is%3Aissue+is%3Aopen+label%3Aproduction) for active production alerts." >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        
        echo "## 🛠️ Manual Test Execution" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        echo '```bash' >> TEST_STATUS.md
        echo "# Run all production tests locally" >> TEST_STATUS.md
        echo "./run-all-production-tests.sh" >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        echo "# Run specific test phase" >> TEST_STATUS.md
        echo "./tests/integration/quick-smoke-test.sh" >> TEST_STATUS.md
        echo "./tests/monitoring/health-check-tests.sh" >> TEST_STATUS.md
        echo "./tests/integration/cross-service-tests.sh" >> TEST_STATUS.md
        echo "./tests/regression/known-issues-tests.sh" >> TEST_STATUS.md
        echo '```' >> TEST_STATUS.md
        echo "" >> TEST_STATUS.md
        
        echo "---" >> TEST_STATUS.md
        echo "*This dashboard is automatically updated after each test run.*" >> TEST_STATUS.md
        
    - name: Commit dashboard update
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add TEST_STATUS.md
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "🤖 Update test status dashboard [skip ci]"
          git push
        fi
